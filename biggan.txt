Files already downloaded and verified
---------- Networks architecture -------------
EditAndGen(
  (mods): ModuleList(
    (0): biggan_gen(
      (blocks): Sequential(
        (0): ResBlockUpNoResidual(
          (main_module): Sequential(
            (0): Upsample(scale_factor=2.0, mode=nearest)
            (1): Conv2d(5, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (2): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (3): ReLU()
            (4): Conv2d(2, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        (1): ResBlockUp(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Upsample(scale_factor=2.0, mode=nearest)
            (3): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (4): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(50, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Upsample(scale_factor=2.0, mode=nearest)
            (1): Conv2d(100, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (2): ResBlockUp(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Upsample(scale_factor=2.0, mode=nearest)
            (3): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (4): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(50, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Upsample(scale_factor=2.0, mode=nearest)
            (1): Conv2d(100, 3, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
      (fc): Sequential(
        (0): Linear(in_features=128, out_features=80, bias=True)
        (1): BatchNorm1d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (1): biggan_editor(
      (blocks): Sequential(
        (0): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(3, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(1, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(3, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (1): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(50, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(100, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (2): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(50, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(100, 50, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (3): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(50, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(25, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(50, 3, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
      (critic_gate): CriticGate(
        (gate_calc): Sequential(
          (0): Conv2d(3, 1, kernel_size=(10, 10), stride=(1, 1))
          (1): Sigmoid()
        )
      )
    )
    (2): biggan_editor(
      (blocks): Sequential(
        (0): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(3, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(1, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(3, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (1): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(50, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(100, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (2): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(50, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(100, 50, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (3): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(50, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(25, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(50, 3, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
      (critic_gate): CriticGate(
        (gate_calc): Sequential(
          (0): Conv2d(3, 1, kernel_size=(10, 10), stride=(1, 1))
          (1): Sigmoid()
        )
      )
    )
    (3): biggan_editor(
      (blocks): Sequential(
        (0): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(3, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(1, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(3, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (1): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(50, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(100, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (2): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(50, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(100, 50, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (3): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(50, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(25, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(50, 3, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
      (critic_gate): CriticGate(
        (gate_calc): Sequential(
          (0): Conv2d(3, 1, kernel_size=(10, 10), stride=(1, 1))
          (1): Sigmoid()
        )
      )
    )
    (4): biggan_editor(
      (blocks): Sequential(
        (0): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(3, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(1, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(3, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (1): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(50, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(100, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (2): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(50, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(100, 50, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (3): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(50, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(25, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(50, 3, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
      (critic_gate): CriticGate(
        (gate_calc): Sequential(
          (0): Conv2d(3, 1, kernel_size=(10, 10), stride=(1, 1))
          (1): Sigmoid()
        )
      )
    )
    (5): biggan_editor(
      (blocks): Sequential(
        (0): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(3, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(1, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(3, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (1): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(50, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(100, 100, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (2): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(50, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(100, 50, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (3): ResBlock(
          (main_module): Sequential(
            (0): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): ReLU()
            (2): Conv2d(50, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (4): ReLU()
            (5): Conv2d(25, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (skip): Sequential(
            (0): Conv2d(50, 3, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
      (critic_gate): CriticGate(
        (gate_calc): Sequential(
          (0): Conv2d(3, 1, kernel_size=(10, 10), stride=(1, 1))
          (1): Sigmoid()
        )
      )
    )
  )
)
Total number of parameters: 1097497
biggan_discriminator(
  (blocks): Sequential(
    (0): ResBlockDown(
      (main_module): Sequential(
        (0): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(3, 1, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (3): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (4): ReLU()
        (5): Conv2d(1, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (skip): Sequential(
        (0): Conv2d(3, 100, kernel_size=(1, 1), stride=(2, 2))
      )
    )
    (1): ResBlockDown(
      (main_module): Sequential(
        (0): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(100, 50, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (3): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (4): ReLU()
        (5): Conv2d(50, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (skip): Sequential(
        (0): Conv2d(100, 50, kernel_size=(1, 1), stride=(2, 2))
      )
    )
    (2): ResBlockDown(
      (main_module): Sequential(
        (0): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU()
        (2): Conv2d(50, 25, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (3): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (4): ReLU()
        (5): Conv2d(25, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (skip): Sequential(
        (0): Conv2d(50, 20, kernel_size=(1, 1), stride=(2, 2))
      )
    )
  )
  (fc_list): ModuleList(
    (0): Linear(in_features=320, out_features=1, bias=True)
    (1): Linear(in_features=320, out_features=1, bias=True)
    (2): Linear(in_features=320, out_features=1, bias=True)
    (3): Linear(in_features=320, out_features=1, bias=True)
    (4): Linear(in_features=320, out_features=1, bias=True)
    (5): Linear(in_features=320, out_features=1, bias=True)
  )
)
Total number of parameters: 93277
-----------------------------------------------
Start pre-train
